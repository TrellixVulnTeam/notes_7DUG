when in object key and variable name is same so we can use like

obj={
    name,
    city
}
this is also know as shourthand

object disreucturing
obj={name:"sa",city:"xyz"}
{name: 'sa', city: 'xyz'}
let {name,city}=obj
if key not there in object and we are trying to  Destructuring it will give undefine
if we value of key is undefined then also we will get undefined


spread operator
shallow-copy= when we copy referenceof object to another object

create a copy
- JSON.parse(JSON.stringyfy(obj))
- spread operator  --- const obj1={...obj};
- custom logic

concate object
obj3={obj1,obj2,city:{"name":"paris"}}
////
obj4=Object.assign(obj1,obj2);



map:
    // Task 1 - Multiply every number by 2
    const numbers = [5, 3, 9, 30];
    const multiple=[]
    //numbers.forEach(val=>multiple.push(val*2))
    /*numbers.forEach((val,index,array)=>{
        numbers[index]=val*2;
    })*/

    const multipleElementByTwo = (numbers) => {
    if(!Array.isArray(numbers)){
        return "Input is not an array"
    }
    return numbers.map((val)=> val*2)
    
    
    };


    console.log(multipleElementByTwo (numbers)); // [10, 6, 18, 60]

///
 set 
   set.values()
   set.add(value)
map 
   map will resturn new object , it will not effect actual array

   how to clear object and array

   higher order function

   


   /// avoid lazy loading routing
   //avoid lazy loading component
   // avoid rerendring
   // code spliting

   // browser intersection is browser api

   // image ko lazy load
    loading="lazy"